name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-20.04

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2.3.4

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Determine composer cache directory
        id: determined-composer-cache
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: Cache dependencies installed with composer
        id: cache-composer
        uses: actions/cache@v2
        with:
          path: "${{ steps.determined-composer-cache.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache npm
        id: cache-npm
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install backend dependencies
        if: steps.cache-composer.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress

      - name: Install frontend dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Lint js codebase
        run: npm run lint

      - name: Run php code style checker
        run: composer ecs
